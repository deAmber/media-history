/*
 * Colours from NextUI.
 * https://www.figma.com/design/MBFftXCnGZXmbYlt9SiegK/NextUI-Figma-Kit-(Community)-(Community)?node-id=0-1&m=dev
 */
@import "./variables";

body {
  background-color: var(--background);
  color: var(--foreground);
}

//Chips
.chip {
  height: 24px;
  padding: 0 $unit-1;
  border-radius: $rounded-small;
  background-color: var(--default);
  color: var(--foreground);
  font-size: $font-size-tiny;
  line-height: $line-height-tiny;
  display: flex;
  align-items: center;
  gap: $unit-1;
  * {
    color: var(--foreground);
    font-size: $font-size-tiny;
    line-height: $line-height-tiny;
  }
  &.primary {
    background-color: var(--primary);
  }
  &.secondary {
    background-color: var(--secondary);
  }
}

//Spinner
.spinner {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  border: $unit-1 solid var(--default-300);
  border-right-color: var(--primary);
  animation: spinner-spin .8s ease infinite;
  @keyframes spinner-spin {
    0% {
      transform:rotate(0)
    }
    to {
      transform:rotate(360deg)
    }
  }
}
.loaderContainer {
  width: 100%;
  height: 100%;
  padding: $unit-6;
  display: flex;
  flex-direction: column;
  gap: $unit-3;
  align-items: center;
  justify-content: center;
}

//Inputs
.inputWrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: $unit-3;
  margin-top: $unit-6;
  label, .label {
    font-size: $font-size-small;
    line-height: $line-height-small;
    color: var(--foreground);
    .desc {
      margin-left: $unit-2;
    }
  }
  &.required {
    label, .label {
      &:after {
        content: '*';
        color: var(--danger);
      }
    }
  }
  &.prefixed {
    position: relative;
    input {
      padding-left: $unit-7;
    }
    &::before {
      content: '$';
      position: absolute;
      bottom: $unit-2;
      left: $unit-3;
    }
  }
  &.suffixed {
    position: relative;
    input {
      padding-right: $unit-9;
    }
    &::after {
      content: '/10';
      position: absolute;
      bottom: $unit-2;
      right: $unit-3;
    }
  }
  &.inline {
    flex-direction: row;
    align-items: center;
    label, .label {
      min-width: 1rem;
    }
  }
}
fieldset {
  appearance: none;
  margin: 0;
  padding: 0;
  border: none;
  legend {
    font-size: $font-size-large;
    line-height: $line-height-large;
    color: var(--default-400);
    font-weight: 700;
    .desc {
      margin-left: $unit-2;
    }
  }
  &:not(.inputSplit) .inputWrapper:first-of-type {
    margin-top: $unit-4;
  }
}
form.submitted input:invalid {
  background-color: var(--danger-200);
}
.inputSplit {
  display: flex;
  flex-direction: row;
  gap: $unit-4;
  appearance: none;
  border: none;
  .inputWrapper {
    margin-top: 0;
  }
  @media (max-width: $breakSM) {
    flex-direction: column;
    gap: $unit-3;
  }
}
input, textarea, select {
  box-shadow: $shadow-sm;
  border-radius: $rounded-medium;
  background-color: var(--default-100);
  width: 100%;
  padding: $unit-1 $unit-3;
  min-height: 2.5rem;
  font-size: $font-size-small;
  line-height: $line-height-small;
  color: var(--foreground);
  appearance: none;
  border: none;
  &:focus-visible, &:hover {
    background-color: var(--default-200);
  }
  &[type="date"]::-webkit-calendar-picker-indicator {
    background-image: url("../images/essential/calander.svg");
    filter: var(--filter-default-400);
    background-size: contain;
    width: 1.5rem;
    height: 1.5rem;
    &:hover {
      opacity: 0.5;
    }
  }
  &::placeholder {
    font-family: inter, 'sans-serif';
    color: var(--content4);
  }
}
select {
  appearance: auto;
}
//React Select
.react-select__control {
  background-color: var(--default-100);
  border: none;
  border-radius: $rounded-medium;
  padding: $unit-0 $unit-2;
  * {
    color: var(--foreground);
    cursor: pointer;
  }
  .react-select__placeholder {
    color: var(--content4);
    font-size: $font-size-small;
    line-height: $line-height-small;
  }
  .chip {
    margin-right: $unit-1;
    .react-select__multi-value__remove {
      background-image: url("../images/essential/close-circle.svg");
      width: 1rem;
      height: 1rem;
      background-size: contain;
      filter: var(--filter-foreground);
      &:hover {
        filter: var(--filter-danger)
      }
      svg {
        display: none;
      }
    }
  }
}
.react-select__menu {
  margin-top: $unit-1;
  background-color: var(--content1);
  border-radius: $rounded-small;
  box-shadow: $shadow-sm;
  padding: $unit-2;
  min-width: 200px;
  width: fit-content;
  border: 1px solid var(--default-100);
  * {
    color: var(--foreground);
  }
  .react-select__option {
    padding: $unit-1_5 $unit-2;
    background-color: var(--content1);
    border-radius: $rounded-small;
    cursor: pointer;
    &:hover {
      background-color: var(--default);
    }
    &--is-selected {
      background-color: var(--content1);
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      gap: $unit-2;
      &::after {
        content: "";
        background-image: url("../images/essential/tick-circle.svg");
        display: inline-block;
        width: $unit-4;
        height: $unit-4;
        background-size: $unit-4;
        filter: var(--filter-foreground);
      }
    }
  }
}
//switch
.switch {
  input {
    &:checked + label .toggleWrap {
      background-color: var(--default-400);
      border-color: var(--default-400);
      .toggle {
        right: 0.25rem;
      }
    }
  }
  label {
    display: flex;
    gap: $unit-3;
    align-items: center;
    &:focus-visible {
      box-shadow: none !important;
      outline: none !important;
      .toggleWrap {
        box-shadow: $shadow-sm;
      }
    }
  }
  .toggleWrap {
    background-color: var(--default-200);
    border: 2px solid var(--default-200);
    border-radius: $rounded-large;
    width: $unit-10;
    height: $unit-6;
    padding: $unit-1;
    display: block;
    position: relative;
    cursor: pointer;
    .toggle {
      border-radius: 50%;
      background-color: var(--background);
      width: 1rem;
      height: 1rem;
      display: block;
      position: absolute;
      right: calc( 100% - 1.25rem );
      top: calc( 50% - 0.5rem );
      transition: right 0.1s linear;
      filter: drop-shadow(0px 2px 4px rgba(52, 64, 84, 0.12)) drop-shadow(0px 3px 12px rgba(52, 64, 84, 0.13));
    }
  }
}


//buttons
button:not(.tab), .button {
  border-radius: $rounded-small;
  padding: $unit-0 $unit-4;
  height: $unit-10;
  appearance: none;
  border: none;
  font-size: $font-size-small;
  line-height: $line-height-small;
  color: var(--foreground);
  background-color: var(--default);
  cursor: pointer;
  &:hover {
    text-decoration: underline;
  }
  //sizes
  &.sm {
    height: $unit-8;
    padding: $unit-0 $unit-3;
  }
  &.lg {
    height: $unit-12;
    padding: $unit-0 $unit-6;
  }
  &.iconOnly {
    padding: $unit-0;
    width: $unit-10;
    &.sm {
      width: $unit-8;
    }
    &.lg {
      width: $unit-12;
    }
    &::before, &::after {
      margin: auto;
    }
    &:hover {
      &::before, &::after {
        filter: var(--filter-default-500);
      }
    }
  }
  //colours
  &.primary {
    background-color: var(--primary);
  }
  &.secondary {
    background-color: var(--secondary);
  }
  &.success {
    background-color: var(--success);
  }
  &.warning {
    background-color: var(--warning);
  }
  &.danger {
    background-color: var(--danger);
  }
  //icons
  &::before, &::after {
    display: block;
    width: 1.25rem;
    height: 1.25rem;
    background-position: center;
    background-size: contain;
    filter: var(--filter-foreground);
  }
}
.buttonGroup {
  button, .button {
    &:not(:first-of-type) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    &:not(:last-of-type) {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }
  }
}

//Tabs
.tab {
  border-radius: $rounded-small;
  padding: $unit-1 $unit-3;
  font-size: $font-size-small;
  line-height: $line-height-small;
  text-align: center;
  color: var(--default-500);
  border: none;
  background-color: transparent;
  text-decoration: none;
  cursor: pointer;
  white-space: nowrap;
  &:hover {
    opacity: 0.5;
    color: var(--default-500);
  }
  &.active {
    background-color: var(--background);
    color: var(--foreground);
    pointer-events: none;
  }
  &.sm {
    font-size: $font-size-tiny;
    line-height: $line-height-tiny;
  }
  &.lg {
    font-size: $font-size-medium;
    line-height: $line-height-medium;
  }
}
.tabGroup {
  margin-left: auto;
  width: fit-content;
  max-width: 100%;
  margin-right: auto;
  margin-bottom: $unit-6;
  border-radius: $rounded-medium;
  padding: $unit-1;
  background-color: var(--default-100);
  display: flex;
  flex-direction: row;
  align-items: center;
  overflow-x: auto;
  gap: $unit-2;
  &.sm .tab {
    font-size: 0.75rem;
    line-height: 1rem;
  }
  &.lg .tab {
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .react-select-wrapper {
    flex-shrink: 0;
  }
}

//Chip
.chip {
  padding: 0 $unit-1;
  height: 1.5rem;
  border-radius: $rounded-small;
  font-size: $font-size-tiny;
  line-height: $line-height-tiny;
  background-color: var(--default);
  color: var(--foreground);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  &.primary {
    background-color: var(--primary);
  }
  &.secondary {
    background-color: var(--secondary);
  }
  &.success {
    background-color: var(--success);
    color: var(--content1);
  }
  &.warning {
    background-color: var(--warning);
    color: var(--content1);
  }
  &.danger {
    background-color: var(--danger);
    color: var(--content1);
  }
  //Tooltip icons
  &.desc {
    display: inline-block;
    vertical-align: text-bottom;
    width: 1.5rem;
    padding: 0;
    &::before {
      content: "";
      background-image: url("../images/essential/info-circle.svg");
      display: inline-block;
      width: 100%;
      height: 100%;
      background-size: 1rem;
      filter: var(--filter-foreground);
    }
  }
}

//Tooltip
.react-tooltip {
  background-color: var(--content1) !important;
  color: var(--foreground) !important;
  border-radius: $rounded-medium !important;
  opacity: 1 !important;
  padding: $unit-1 $unit-3 !important;
  font-size: $font-size-small !important;
  font-weight: 400;
  line-height: $line-height-small;
  max-width: 100vw
;
  .react-tooltip-arrow {
    background-color: var(--content1) !important;
  }
  &.content3 {
    background-color: var(--content3) !important;
    .react-tooltip-arrow {
      background-color: var(--content3) !important;
    }
  }
  &.primary {
    background-color: var(--primary) !important;
    .react-tooltip-arrow {
      background-color: var(--primary) !important;
    }
  }
  &.primary {
    background-color: var(--primary) !important;
    .react-tooltip-arrow {
      background-color: var(--primary) !important;
    }
  }
  &.secondary {
    background-color: var(--secondary) !important;
    .react-tooltip-arrow {
      background-color: var(--secondary) !important;
    }
  }
  &.success {
    background-color: var(--success) !important;
    color: var(--content1) !important;
    .react-tooltip-arrow {
      background-color: var(--success) !important;
    }
  }
  &.warning {
    background-color: var(--warning) !important;
    color: var(--content1) !important;
    .react-tooltip-arrow {
      background-color: var(--warning) !important;
    }
  }
  &.danger {
    background-color: var(--danger) !important;
    color: var(--content1) !important;
    .react-tooltip-arrow {
      background-color: var(--danger) !important;
    }
  }
}

//Modal
.react-micro-modal--portal {
  &.open::before {
    content: "";
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    position: absolute;
    pointer-events: all;
  }
  [role="dialog"] {
    background-color: var(--content1) !important;
    min-width: 50% !important;
    max-width: 50% !important;
    max-height: 70% !important;
    height: 70%;
    overflow: hidden !important;
    padding: $unit-4 $unit-6 !important;
    border-radius: $rounded-medium !important;
    box-shadow: $shadow-lg;
    position: relative;
    .loaderContainer {
      position: absolute;
      background-color: rgba(0, 0, 0, 0.6);
      top: 0;
      left: 0;
      z-index: 700;
    }
    .title {
      margin-bottom: $unit-4;
      h2 {
        font-weight: 600;
        font-size: $font-size-large;
        line-height: $line-height-large;
      }
    }
    .content {
      overflow-y: auto;
      padding-top: $unit-2;
      padding-bottom: $unit-2;
      max-height: calc(100% - 6.25rem);
    }
    .footer {
      padding-top: $unit-4;
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      gap: $unit-2;
      background-color: var(--content1);
      position: absolute;
      left: $unit-6;
      right: $unit-6;
      bottom: $unit-4;
    }
    &.small {
      padding-bottom: calc( #{$unit-4} + 56px ) !important;
      height: auto !important;
      .content {
        height: auto;
      }
    }
    @media (max-width: $breakLG) {
      max-width: 75% !important;
      min-width: 75% !important;
    }
    @media (max-width: $breakMD) {
      max-width: 100% !important;
      max-height: 100% !important;
      height: 100%;
      width: 100%;
      border-radius: 0 !important;
    }
  }
}

//Table
.p-datatable {
  padding: $unit-4;
  border-radius: $rounded-small;
  box-shadow: $shadow-sm;
  background-color: var(--content1);
  width: 100%;
  table {
    border-collapse: collapse;
    width: 100%;
  }
  thead {
    th {
      padding: $unit-3 $unit-2;
      background-color: var(--default-100);
      color: var(--default-500);
      &:first-of-type {
        border-top-left-radius: $rounded-small;
        border-bottom-left-radius: $rounded-small;
      }
      &:last-of-type {
        border-top-right-radius: $rounded-small;
        border-bottom-right-radius: $rounded-small;
      }
      .p-column-title {
        font-size: $font-size-tiny;
        font-weight: 600;
        line-height: $line-height-tiny;
        text-transform: uppercase;
      }
      &.p-sortable-column {
        &:hover {
          color: var(--default-400);
          span[data-pc-section=sort] {
            filter: var(--filter-default-400);
          }
        }
        &[aria-sort=none] {
          span[data-pc-section=sort] {
            visibility: hidden;
          }
          &:hover {
            span[data-pc-section=sort] {
              visibility: visible;
            }
          }
        }
        span[data-pc-section=sort] {
          margin-left: $unit-2;
          width: 1rem;
          height: 1rem;
          background-image: url("../images/arrows/arrow-up.svg");
          filter: var(--filter-default-500);
          svg {
            display: none;
          }
        }
        &[aria-sort=descending] {
          span[data-pc-section=sort] {
            background-image: url("../images/arrows/arrow-down.svg");
          }
        }
      }
    }
  }
  tbody {
    &::before {
      //Spacing between header and body
      content: "";
      display: block;
      height: $unit-2;
    }
    td {
      padding: $unit-3 $unit-2;
    }
    tr:nth-child(even) td {
      background-color: var(--default-100);
      &:first-of-type {
        border-top-left-radius: $rounded-small;
        border-bottom-left-radius: $rounded-small;
      }
      &:last-of-type {
        border-top-right-radius: $rounded-small;
        border-bottom-right-radius: $rounded-small;
      }
    }
  }
}

.container {
  padding: $unit-4;
  border-radius: $rounded-small;
  box-shadow: $shadow-sm;
  background-color: var(--content1);
}