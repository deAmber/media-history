/*
 * Colours from NextUI.
 * https://www.figma.com/design/MBFftXCnGZXmbYlt9SiegK/NextUI-Figma-Kit-(Community)-(Community)?node-id=0-1&m=dev
 */
/*
 * Primitives adapted form NextUI.
 * https://www.figma.com/design/MBFftXCnGZXmbYlt9SiegK/NextUI-Figma-Kit-(Community)-(Community)?node-id=5-1194
 */
body {
  background-color: var(--background);
  color: var(--foreground);
}

.chip {
  height: 24px;
  padding: 0 0.25rem;
  border-radius: 0.5rem;
  background-color: var(--default);
  color: var(--foreground);
  font-size: 0.75rem;
  line-height: 1rem;
  display: flex;
  align-items: center;
  gap: 0.25rem;
}
.chip * {
  color: var(--foreground);
  font-size: 0.75rem;
  line-height: 1rem;
}
.chip.primary {
  background-color: var(--primary);
}
.chip.secondary {
  background-color: var(--secondary);
}

.spinner {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  border: 0.25rem solid var(--default-300);
  border-right-color: var(--primary);
  animation: spinner-spin 0.8s ease infinite;
}
@keyframes spinner-spin {
  0% {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}

.loaderContainer {
  width: 100%;
  height: 100%;
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  align-items: center;
  justify-content: center;
}

.inputWrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 0.75rem;
  margin-top: 1.5rem;
}
.inputWrapper label, .inputWrapper .label {
  font-size: 0.875rem;
  line-height: 1.25rem;
  color: var(--foreground);
}
.inputWrapper.required label:after, .inputWrapper.required .label:after {
  content: "*";
  color: var(--danger);
}
.inputWrapper.prefixed {
  position: relative;
}
.inputWrapper.prefixed input {
  padding-left: 1.75rem;
}
.inputWrapper.prefixed::before {
  content: "$";
  position: absolute;
  bottom: 0.5rem;
  left: 0.75rem;
}
.inputWrapper.suffixed {
  position: relative;
}
.inputWrapper.suffixed input {
  padding-right: 2.25rem;
}
.inputWrapper.suffixed::after {
  content: "/10";
  position: absolute;
  bottom: 0.5rem;
  right: 0.75rem;
}
.inputWrapper.inline {
  flex-direction: row;
  align-items: center;
}
.inputWrapper.inline label, .inputWrapper.inline .label {
  min-width: 1rem;
}

fieldset {
  appearance: none;
  margin: 0;
  padding: 0;
  border: none;
}
fieldset legend {
  font-size: 1.125rem;
  line-height: 1.75rem;
  color: var(--default-400);
  font-weight: 700;
}
fieldset .inputWrapper:first-of-type {
  margin-top: 1rem;
}

form.submitted input:invalid {
  background-color: var(--danger-200);
}

.inputSplit {
  display: flex;
  flex-direction: row;
  gap: 1rem;
  appearance: none;
  border: none;
}

input, textarea, select {
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
  border-radius: 0.75rem;
  background-color: var(--default-100);
  width: 100%;
  padding: 0.25rem 0.75rem;
  min-height: 2.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  color: var(--foreground);
  appearance: none;
  border: none;
}
input:focus-visible, input:hover, textarea:focus-visible, textarea:hover, select:focus-visible, select:hover {
  background-color: var(--default-200);
}
input[type=date]::-webkit-calendar-picker-indicator, textarea[type=date]::-webkit-calendar-picker-indicator, select[type=date]::-webkit-calendar-picker-indicator {
  background-image: url("../images/essential/calander.svg");
  filter: var(--filter-default-400);
  background-size: contain;
  width: 1.5rem;
  height: 1.5rem;
}
input[type=date]::-webkit-calendar-picker-indicator:hover, textarea[type=date]::-webkit-calendar-picker-indicator:hover, select[type=date]::-webkit-calendar-picker-indicator:hover {
  opacity: 0.5;
}
input::placeholder, textarea::placeholder, select::placeholder {
  font-family: inter, "sans-serif";
  color: var(--content4);
}

select {
  appearance: auto;
}

.react-select__control {
  background-color: var(--default-100);
  border: none;
  border-radius: 0.75rem;
  padding: 0px 0.5rem;
}
.react-select__control * {
  color: var(--foreground);
  cursor: pointer;
}
.react-select__control .react-select__placeholder {
  color: var(--content4);
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.react-select__control .chip {
  margin-right: 0.25rem;
}
.react-select__control .chip .react-select__multi-value__remove {
  background-image: url("../images/essential/close-circle.svg");
  width: 1rem;
  height: 1rem;
  background-size: contain;
  filter: var(--filter-foreground);
}
.react-select__control .chip .react-select__multi-value__remove:hover {
  filter: var(--filter-danger);
}
.react-select__control .chip .react-select__multi-value__remove svg {
  display: none;
}

.react-select__menu {
  margin-top: 0.25rem;
  background-color: var(--content1);
  border-radius: 0.5rem;
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
  padding: 0.5rem;
  min-width: 200px;
  width: fit-content;
  border: 1px solid var(--default-100);
}
.react-select__menu * {
  color: var(--foreground);
}
.react-select__menu .react-select__option {
  padding: 0.375rem 0.5rem;
  background-color: var(--content1);
  border-radius: 0.5rem;
  cursor: pointer;
}
.react-select__menu .react-select__option:hover {
  background-color: var(--default);
}
.react-select__menu .react-select__option--is-selected {
  background-color: var(--content1);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;
}
.react-select__menu .react-select__option--is-selected::after {
  content: "";
  background-image: url("../images/essential/tick-circle.svg");
  display: inline-block;
  width: 1rem;
  height: 1rem;
  background-size: 1rem;
  filter: var(--filter-foreground);
}

.switch input:checked + label .toggleWrap {
  background-color: var(--default-400);
  border-color: var(--default-400);
}
.switch input:checked + label .toggleWrap .toggle {
  right: 0.25rem;
}
.switch label {
  display: flex;
  gap: 0.75rem;
  align-items: center;
}
.switch label:focus-visible {
  box-shadow: none !important;
  outline: none !important;
}
.switch label:focus-visible .toggleWrap {
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
}
.switch .toggleWrap {
  background-color: var(--default-200);
  border: 2px solid var(--default-200);
  border-radius: 0.875rem;
  width: 2.5rem;
  height: 1.5rem;
  padding: 0.25rem;
  display: block;
  position: relative;
  cursor: pointer;
}
.switch .toggleWrap .toggle {
  border-radius: 50%;
  background-color: var(--background);
  width: 1rem;
  height: 1rem;
  display: block;
  position: absolute;
  right: calc(100% - 1.25rem);
  top: calc(50% - 0.5rem);
  transition: right 0.1s linear;
  filter: drop-shadow(0px 2px 4px rgba(52, 64, 84, 0.12)) drop-shadow(0px 3px 12px rgba(52, 64, 84, 0.13));
}

button:not(.tab), .button {
  border-radius: 0.5rem;
  padding: 0px 1rem;
  height: 2.5rem;
  appearance: none;
  border: none;
  font-size: 0.875rem;
  line-height: 1.25rem;
  color: var(--foreground);
  background-color: var(--default);
  cursor: pointer;
}
button:not(.tab):hover, .button:hover {
  text-decoration: underline;
}
button:not(.tab).sm, .button.sm {
  height: 2rem;
  padding: 0px 0.75rem;
}
button:not(.tab).lg, .button.lg {
  height: 48px;
  padding: 0px 1.5rem;
}
button:not(.tab).iconOnly, .button.iconOnly {
  padding: 0px;
  width: 2.5rem;
}
button:not(.tab).iconOnly.sm, .button.iconOnly.sm {
  width: 2rem;
}
button:not(.tab).iconOnly.lg, .button.iconOnly.lg {
  width: 48px;
}
button:not(.tab).iconOnly::before, button:not(.tab).iconOnly::after, .button.iconOnly::before, .button.iconOnly::after {
  margin: auto;
}
button:not(.tab).iconOnly:hover::before, button:not(.tab).iconOnly:hover::after, .button.iconOnly:hover::before, .button.iconOnly:hover::after {
  filter: var(--filter-default-500);
}
button:not(.tab).primary, .button.primary {
  background-color: var(--primary);
}
button:not(.tab).secondary, .button.secondary {
  background-color: var(--secondary);
}
button:not(.tab).success, .button.success {
  background-color: var(--success);
}
button:not(.tab).warning, .button.warning {
  background-color: var(--warning);
}
button:not(.tab).danger, .button.danger {
  background-color: var(--danger);
}
button:not(.tab)::before, button:not(.tab)::after, .button::before, .button::after {
  display: block;
  width: 1.25rem;
  height: 1.25rem;
  background-position: center;
  background-size: contain;
  filter: var(--filter-foreground);
}

.buttonGroup button:not(:first-of-type), .buttonGroup .button:not(:first-of-type) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.buttonGroup button:not(:last-of-type), .buttonGroup .button:not(:last-of-type) {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

.tab {
  border-radius: 0.5rem;
  padding: 0.25rem 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  text-align: center;
  color: var(--default-500);
  border: none;
  background-color: transparent;
  text-decoration: none;
  cursor: pointer;
  white-space: nowrap;
}
.tab:hover {
  opacity: 0.5;
  color: var(--default-500);
}
.tab.active {
  background-color: var(--background);
  color: var(--foreground);
  pointer-events: none;
}
.tab.sm {
  font-size: 0.75rem;
  line-height: 1rem;
}
.tab.lg {
  font-size: 1rem;
  line-height: 1.5rem;
}

.tabGroup {
  margin-left: auto;
  width: fit-content;
  max-width: 100%;
  margin-right: auto;
  margin-bottom: 1.5rem;
  border-radius: 0.75rem;
  padding: 0.25rem;
  background-color: var(--default-100);
  display: flex;
  flex-direction: row;
  align-items: center;
  overflow-x: auto;
  gap: 0.5rem;
}
.tabGroup.sm .tab {
  font-size: 0.75rem;
  line-height: 1rem;
}
.tabGroup.lg .tab {
  font-size: 1rem;
  line-height: 1.5rem;
}
.tabGroup .react-select-wrapper {
  flex-shrink: 0;
}

.chip {
  padding: 0 0.25rem;
  height: 1.5rem;
  border-radius: 0.5rem;
  font-size: 0.75rem;
  line-height: 1rem;
  background-color: var(--default);
  color: var(--foreground);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
.chip.primary {
  background-color: var(--primary);
}
.chip.secondary {
  background-color: var(--secondary);
}
.chip.success {
  background-color: var(--success);
  color: var(--content1);
}
.chip.warning {
  background-color: var(--warning);
  color: var(--content1);
}
.chip.danger {
  background-color: var(--danger);
  color: var(--content1);
}

.react-micro-modal--portal.open::before {
  content: "";
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  position: absolute;
  pointer-events: all;
}
.react-micro-modal--portal [role=dialog] {
  background-color: var(--content1) !important;
  min-width: 50% !important;
  max-height: 70% !important;
  height: 70%;
  overflow: hidden !important;
  padding: 1rem 1.5rem !important;
  border-radius: 0.75rem !important;
  box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 4px 6px -4px rgba(0, 0, 0, 0.1);
  position: relative;
}
.react-micro-modal--portal [role=dialog] .loaderContainer {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.6);
  top: 0;
  left: 0;
  z-index: 700;
}
.react-micro-modal--portal [role=dialog] .title {
  margin-bottom: 1rem;
}
.react-micro-modal--portal [role=dialog] .title h2 {
  font-weight: 600;
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.react-micro-modal--portal [role=dialog] .content {
  overflow-y: auto;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  max-height: calc(100% - 6.25rem);
}
.react-micro-modal--portal [role=dialog] .footer {
  padding-top: 1rem;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  gap: 0.5rem;
  background-color: var(--content1);
  position: absolute;
  left: 1.5rem;
  right: 1.5rem;
  bottom: 1rem;
}

.p-datatable {
  padding: 1rem;
  border-radius: 0.5rem;
  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.05);
  background-color: var(--content1);
  width: 100%;
}
.p-datatable thead th {
  padding: 0.75rem 0.5rem;
  background-color: var(--default-100);
  color: var(--default-500);
}
.p-datatable thead th:first-of-type {
  border-top-left-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}
.p-datatable thead th:last-of-type {
  border-top-right-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}
.p-datatable thead th .p-column-title {
  font-size: 0.75rem;
  font-weight: 600;
  line-height: 1rem;
  text-transform: uppercase;
}
.p-datatable thead th.p-sortable-column:hover {
  color: var(--default-400);
}
.p-datatable thead th.p-sortable-column:hover span[data-pc-section=sort] {
  filter: var(--filter-default-400);
}
.p-datatable thead th.p-sortable-column[aria-sort=none] span[data-pc-section=sort] {
  visibility: hidden;
}
.p-datatable thead th.p-sortable-column[aria-sort=none]:hover span[data-pc-section=sort] {
  visibility: visible;
}
.p-datatable thead th.p-sortable-column span[data-pc-section=sort] {
  margin-left: 0.5rem;
  width: 1rem;
  height: 1rem;
  background-image: url("../images/arrows/arrow-up.svg");
  filter: var(--filter-default-500);
}
.p-datatable thead th.p-sortable-column span[data-pc-section=sort] svg {
  display: none;
}
.p-datatable thead th.p-sortable-column[aria-sort=descending] span[data-pc-section=sort] {
  background-image: url("../images/arrows/arrow-down.svg");
}
.p-datatable tbody::before {
  content: "";
  display: block;
  height: 0.5rem;
}
.p-datatable tbody td {
  padding: 0.75rem 0.5rem;
}
.p-datatable tbody tr:nth-child(even) td {
  background-color: var(--default-100);
}
.p-datatable tbody tr:nth-child(even) td:first-of-type {
  border-top-left-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}
.p-datatable tbody tr:nth-child(even) td:last-of-type {
  border-top-right-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}

/*# sourceMappingURL=NextUI.css.map */
